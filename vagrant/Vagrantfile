# -*- mode: ruby -*-
# vi: set ft=ruby :
VAGRANTFILE_API_VERSION = "2"
AWS_ACCESS_KEY_ID = ENV['AWS_ACCESS_KEY_ID']
AWS_ACCESS_KEY = ENV['AWS_ACCESS_KEY']
WINDOWS_PASS = ENV['WINDOWS_PASS']

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  ###################
  # Windows machine #
  ###################
  config.vm.define "windows" do |windows|
    #dummy box, will be overriden
    windows.vm.box = "dummy"
    windows.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"

    windows.vm.provider :aws do |aws, override|
      aws.access_key_id = AWS_ACCESS_KEY_ID
      aws.secret_access_key = AWS_ACCESS_KEY

      #this pre-baked AMI, not pure BASE
      aws.ami = "ami-f1b36486"
      aws.region = "eu-west-1"
      aws.instance_type = "m1.small"

      #TODO: user password should be auto generated and passed via user data for better security
      aws.keypair_name = "vagrant_build"
      override.ssh.username = "Administrator"
      override.ssh.password = WINDOWS_PASS

      aws.tags = {
          "Name" => "vagrant cfy windows build",
      }
      aws.security_groups = "vagrant_cfy_build"
    end

    #sync default /vagrant folder
    windows.vm.synced_folder ".", "/vagrant", disabled: true
    windows.vm.synced_folder "./windows", "/home/Administrator/provision"

    #shell provision use bash, so use cmd to run batch script
    windows.vm.provision "shell" do |shell|
      shell.inline = 'cmd /c "C:\Cygwin\home\Administrator\provision\provision.bat"'
      shell.privileged = false
    end
  end

  ########################
  # Linux  32bit Machine #
  ########################
  config.vm.define "linux32" do |linux32|
    #dummy box, will be overriden
    linux32.vm.box = "dummy"
    linux32.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"

    linux32.vm.provider :aws do |aws, override|
      aws.access_key_id = AWS_ACCESS_KEY_ID
      aws.secret_access_key = AWS_ACCESS_KEY

      #official ubuntu 12.04 32bit box
      aws.ami = "ami-2163a756"
      aws.region = "eu-west-1"
      aws.instance_type = "m1.small"

      aws.keypair_name = "vagrant_build"
      override.ssh.username = "ubuntu"
      override.ssh.private_key_path = "~/.ssh/aws/vagrant_build.pem"

      aws.tags = {
          "Name" => "vagrant cfy linux32 build",
      }
        aws.security_groups = "vagrant_cfy_build"
    end

    #need to sync folders
    linux32.vm.synced_folder ".", "/vagrant", disabled: false

    linux32.vm.provision "shell" do |shell|
      shell.path = "linux/provision.sh"
      shell.privileged = false
    end

  end

  ########################
  # Linux  64bit Machine #
  ########################
  config.vm.define "linux64" do |linux64|
    #dummy box, will be overriden
    linux64.vm.box = "dummy"
    linux64.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"

    linux64.vm.provider :aws do |aws, override|
      aws.access_key_id = AWS_ACCESS_KEY_ID
      aws.secret_access_key = AWS_ACCESS_KEY

      #official ubuntu 12.04 64bit box
      aws.ami = "ami-036eaa74"
      aws.region = "eu-west-1"
      aws.instance_type = "m1.small"

      aws.keypair_name = "vagrant_build"
      override.ssh.username = "ubuntu"
      override.ssh.private_key_path = "~/.ssh/aws/vagrant_build.pem"

      aws.tags = {
          "Name" => "vagrant cfy linux64 build",
      }
        aws.security_groups = "vagrant_cfy_build"
    end

    #need to sync folders
    linux64.vm.synced_folder ".", "/vagrant", disabled: false

    linux64.vm.provision "shell" do |shell|
      shell.path = "linux/provision.sh"
      shell.privileged = false
    end

  end
end
