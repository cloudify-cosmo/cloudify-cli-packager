# -*- mode: ruby -*-
# vi: set ft=ruby :
VAGRANTFILE_API_VERSION = "2"
AWS_ACCESS_KEY_ID = ENV["AWS_ACCESS_KEY_ID"]
AWS_ACCESS_KEY = ENV["AWS_ACCESS_KEY"]
WINDOWS_PASS = ENV['WINDOWS_PASS']
AWS_KEYPAIR_NAME = "vagrant_build"
AWS_PRIVATE_KEY_PATH = "~/.ssh/aws/vagrant_build.pem"
AWS_SECURITY_GROUP = "vagrant_cfy_build"
AWS_REGION = "eu-west-1"
AWS_INSTANCE_TYPE = "m1.small"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  ###################
  # Windows machine #
  ###################
  config.vm.define "windows" do |windows|
    #dummy box, will be overriden
    windows.vm.box = "dummy"
    windows.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"

    windows.vm.provider :aws do |aws, override|
      aws.access_key_id = AWS_ACCESS_KEY_ID
      aws.secret_access_key = AWS_ACCESS_KEY

      #this pre-baked AMI, not pure BASE
      aws.ami = "ami-afb86fd8"
      aws.region = AWS_REGION
      aws.instance_type = AWS_INSTANCE_TYPE

      # Change keypair_name
      aws.keypair_name = AWS_KEYPAIR_NAME
      override.ssh.username = "Administrator"
      override.ssh.password = WINDOWS_PASS

      aws.tags = {
          "Name" => "Vagrant CFY windows testing",
      }
      aws.security_groups = AWS_SECURITY_GROUP
    end

    windows.vm.provision "shell" do |shell|
      shell.inline = 'chmod -R 777 /vagrant/files/exe && cd $TMP &&
                      cmd /c python "C:\Cygwin\vagrant\scripts\test_package.py"'
      shell.privileged = false
    end
  end

  ########################
  # Linux  32bit Machine #
  ########################
  config.vm.define "linux32" do |linux32|
    #dummy box, will be overriden
    linux32.vm.box = "dummy"
    linux32.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"

    linux32.vm.provider :aws do |aws, override|
      aws.access_key_id = AWS_ACCESS_KEY_ID
      aws.secret_access_key = AWS_ACCESS_KEY

      #official ubuntu 12.04 32bit box
      aws.ami = "ami-ca5b89bd"
      aws.region = AWS_REGION
      aws.instance_type = AWS_INSTANCE_TYPE

      aws.keypair_name = AWS_KEYPAIR_NAME
      override.ssh.username = "ubuntu"
      override.ssh.private_key_path = AWS_PRIVATE_KEY_PATH

      aws.tags = {
          "Name" => "Vagrant CFY linux32 testing",
      }
        aws.security_groups = AWS_SECURITY_GROUP
    end

    linux32.vm.provider :virtualbox do |vb, override|
      override.vm.box = 'ubuntu/trusty32'
    end

    linux32.vm.provision "shell",
    inline: 'python /vagrant/scripts/test_package.py'
  end

    ########################
    # Linux  64bit Machine #
    ########################
    config.vm.define "linux64" do |linux64|
      #dummy box, will be overriden
      linux64.vm.box = "dummy"
      linux64.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"

      linux64.vm.provider :aws do |aws, override|
        aws.access_key_id = AWS_ACCESS_KEY_ID
        aws.secret_access_key = AWS_ACCESS_KEY

        #official ubuntu 12.04 32bit box
        aws.ami = "ami-b25e8cc5"
        aws.region = AWS_REGION
        aws.instance_type = AWS_INSTANCE_TYPE

        aws.keypair_name = AWS_KEYPAIR_NAME
        override.ssh.username = "ubuntu"
        override.ssh.private_key_path = AWS_PRIVATE_KEY_PATH

        aws.tags = {
            "Name" => "Vagrant CFY linux64 testing",
        }
          aws.security_groups = AWS_SECURITY_GROUP
      end

      linux64.vm.provider :virtualbox do |vb, override|
        override.vm.box = "ubuntu/trusty64"
      end

      linux64.vm.provision "shell",
      inline: 'python /vagrant/scripts/test_package.py'
    end
end
